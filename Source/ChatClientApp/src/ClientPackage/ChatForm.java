/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ClientPackage;
import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jame
 */
public class ChatForm extends javax.swing.JFrame {
    Socket socket;
    ReciveRespondUserThread respond;
    SendRequestUserThread request;
//    BufferedReader br;
//    BufferedWriter bw;
    /**
     * Creates new form ChatForm
     */
    public ChatForm(Socket s, String username) {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("MESSENGER");
        
        nameUser.setText(username);
        socket = s;
        
        respond = new ReciveRespondUserThread(socket, chatList, onlineUsers);
        respond.t.start();
        
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageText = new javax.swing.JTextField();
        sendBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        fileBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        onlineUsers = new javax.swing.JList<>();
        chatWithLable = new javax.swing.JLabel();
        nameUser = new javax.swing.JLabel();
        downloadBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        messageText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextActionPerformed(evt);
            }
        });

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        chatList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(chatList);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Online users");

        fileBtn.setText("Select file");
        fileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileBtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(51, 204, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MESSENGER");
        jLabel2.setOpaque(true);

        onlineUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        onlineUsers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onlineUsersValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(onlineUsers);

        chatWithLable.setBackground(new java.awt.Color(204, 102, 0));
        chatWithLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chatWithLable.setText("CHAT WITH:");
        chatWithLable.setOpaque(true);

        nameUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        nameUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        downloadBtn.setText("Download");
        downloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                            .addComponent(messageText)
                            .addComponent(chatWithLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameUser, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(sendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                    .addComponent(fileBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(downloadBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(downloadBtn))
                    .addComponent(nameUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(chatWithLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(fileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        try 
        {
            // TODO add your handling code here:
            
            String recieveUser = onlineUsers.getSelectedValue();
            if(recieveUser != null)
            {
                String sendMessage = messageText.getText();
                if(!sendMessage.isEmpty())
                {
                    respond.addMessage(sendMessage, recieveUser);
                    new SendRequestUserThread(socket, "text", recieveUser, sendMessage).t.start();
                    messageText.setText("");
                }
            }    
 
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(ChatForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_sendBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            new SendRequestUserThread(socket, "Sign Out", "none", "none").t.start();
        } catch (Exception ex) {
            Logger.getLogger(ChatForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void onlineUsersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_onlineUsersValueChanged
        // TODO add your handling code here:
        if (!evt.getValueIsAdjusting()) 
        {//This line prevents double events
            String selectedName = onlineUsers.getSelectedValue();
            
            if(selectedName == null)
            {
                chatWithLable.setText("CHAT WITH: ");
            }
            else
            {
                chatWithLable.setText("CHAT WITH: " + selectedName);
            }
            respond.setChatList(selectedName);
        }
        
    }//GEN-LAST:event_onlineUsersValueChanged

    private void fileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileBtnActionPerformed
        // TODO add your handling code here:
        String reciever = onlineUsers.getSelectedValue();
        if(reciever != null)
        {
            JFileChooser jfile = new JFileChooser();
            jfile.setMultiSelectionEnabled(false);
            int isChoose = jfile.showDialog(this, "Select file");
            if(isChoose == JFileChooser.APPROVE_OPTION)
            {
                File f =  jfile.getSelectedFile();
                new sendFileThread(socket, "send file", reciever, f).t.start();

                respond.addMessage(f.getName(), reciever);
            }
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "Please select user to send", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_fileBtnActionPerformed

    private void downloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadBtnActionPerformed
        // TODO add your handling code here:
        String message[] = chatList.getSelectedValue().split(": ");
        String fileName = message[1];
        System.out.println(fileName);
        
        if(fileName != null)
        {
//            System.out.println(respond.fileDownload.size());
//            String a[] = respond.fileDownload.keySet().toArray(new String[respond.fileDownload.size()]);
//                      for(int i = 0; i < respond.fileDownload.size(); i++)
//                      {
//                          System.out.println(a[i]);
//                      }
            if(respond.fileDownload.containsKey(fileName))
            {
                ByteArrayOutputStream bos = respond.fileDownload.get(fileName);
                JFileChooser jfile = new JFileChooser();
                jfile.setMultiSelectionEnabled(false);
                jfile.setDialogType(JFileChooser.SAVE_DIALOG);
                jfile.setSelectedFile(new File(fileName));
                int isChoose = jfile.showDialog(this, "Savee");
                if(isChoose == JFileChooser.APPROVE_OPTION)
                {
                   
                    try 
                    {
                        FileOutputStream f;
                        f = new FileOutputStream(jfile.getSelectedFile());
                        bos.writeTo(f);
                        JOptionPane.showMessageDialog(this, "File is downloaded to " + jfile.getSelectedFile(), "SUCESS", JOptionPane.INFORMATION_MESSAGE);
//                        jfile.
                    } 
                    catch (IOException ex) 
                    {
                        Logger.getLogger(ChatForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
            else 
            {
                JOptionPane.showMessageDialog(this, "It's not a file !", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
        else 
        {
            JOptionPane.showMessageDialog(this, "Please select file to download !", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_downloadBtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ChatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ChatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ChatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ChatForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ChatForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> chatList;
    private javax.swing.JLabel chatWithLable;
    private javax.swing.JButton downloadBtn;
    private javax.swing.JButton fileBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField messageText;
    private javax.swing.JLabel nameUser;
    private javax.swing.JList<String> onlineUsers;
    private javax.swing.JButton sendBtn;
    // End of variables declaration//GEN-END:variables
}
